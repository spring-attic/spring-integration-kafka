<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.springframework.org/schema/integration/kafka"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			xmlns:tool="http://www.springframework.org/schema/tool"
			xmlns:integration="http://www.springframework.org/schema/integration"
			targetNamespace="http://www.springframework.org/schema/integration/kafka"
			elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"/>
	<xsd:import namespace="http://www.springframework.org/schema/tool"/>
	<xsd:import namespace="http://www.springframework.org/schema/integration"
				schemaLocation="http://www.springframework.org/schema/integration/spring-integration.xsd"/>

	<xsd:annotation>
		<xsd:documentation><![CDATA[
			Defines the configuration elements for the Spring Integration
			Kafka Adapter.
		]]></xsd:documentation>
	</xsd:annotation>

	<xsd:element name="zookeeper-connect">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
                    Defines a Kafka server information.
                ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="required"/>
			<xsd:attribute name="zk-connect" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                        Indicates the Kafka server URL
                    ]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="zk-connection-timeout" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                        Specifies the max time in ms that the client waits to establish a connection to zookeeper.
                    ]]></xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:union memberTypes="xsd:int xsd:string"/>
				</xsd:simpleType>
			</xsd:attribute>

			<xsd:attribute name="zk-session-timeout" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                        The zookeeper session timeout.
                    ]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="zk-sync-time" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                        Max time for how far a zookeeper follower can be behind a zookeeper leader in ms.
                    ]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-commit-interval" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                        The frequency that the consumed offsets are committed to zookeeper in ms.
                    ]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="producer-context">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
                    Defines a producer context.
                ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="producer-configurations" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
                            Groups kafka topic configurations.
                        ]]></xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:choice>
							<xsd:element name="producer-configuration" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation><![CDATA[
                                    Declares a kafka topic configuration which drives how and where a topic is sent to broker/s.
                                ]]></xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:attribute name="topic" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>
												The topic configured by this configuration.
											</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="broker-list" use="required" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation><![CDATA[
                                                list of comma separated kafka brokers.
                                            ]]></xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="key-class-type" use="optional" type="xsd:string" default="[B">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Class type used for the key
												</xsd:documentation>
												<tool:annotation kind="direct">
													<tool:expected-type type="java.lang.Class"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="value-class-type" use="optional" type="xsd:string" default="[B">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Class type used for the value
												</xsd:documentation>
												<tool:annotation kind="direct">
													<tool:expected-type type="java.lang.Class"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="value-encoder" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													[DEPRECATED]
													Custom implementation of a Kafka Encoder for encoding message values.
													This option is deprecated, 'value-serializer' is the recommended option.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="kafka.serializer.Encoder"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="value-serializer" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Custom implementation of a Kafka Serializer for message values.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="org.apache.kafka.common.serialization.Serializer"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="key-encoder" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													[DEPRECATED]
													Custom implementation of a Kafka Encoder for encoding message keys.
													This option is deprecated, 'key-serializer' is the recommended option.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="kafka.serializer.Encoder"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="key-serializer" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Custom implementation of a Kafka Serializer for message keys.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="kafka.serializer.Encoder"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="conversion-service" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Conversion service for transforming inbound objects into the target key and value
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="org.springframework.core.convert.ConversionService"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="producer-listener" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Listener for notifying when a message has been sent or has failed.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="org.springframework.integration.kafka.support.ProducerListener"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="compression-type" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation><![CDATA[
                                                Indicates the type of compression codec used for message compression.
                                            ]]></xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="partitioner" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													[DEPRECATED]
													Custom Kafka key partitioner.
													Deprecated in favor of 'partition-id' ('partition-id-expression')
													on the 'outbound-channel-adapter'.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="kafka.producer.Partitioner"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="batch-bytes" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>
												number of messages to batch at this producer.
											</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="sync" use="optional" type="xsd:boolean">
										<xsd:annotation>
											<xsd:documentation>
												If true, sends messages synchronously. Asynchronously (default) otherwise
											</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="send-timeout" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>
												If sync=true, specify timeout in milliseconds. 0 or below indicate forever (default)
											</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="charset" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>
												The character encoding to preform String to/from byte[] conversion
												instead of general (de)serialization. Defaults to UTF8.
											</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:choice>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:string" use="required"/>
			<xsd:attribute name="producer-properties" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<xsd:documentation>
							Kafka producer properties to use for all producers
						</xsd:documentation>
						<tool:annotation kind="ref">
							<tool:expected-type type="java.util.Properties"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attributeGroup ref="integration:smartLifeCycleAttributeGroup" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="consumer-context">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					[DEPRECATED]
                    Defines a producer context.
                ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="consumer-configurations" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
                            Groups kafka topic configurations.
                        ]]></xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:choice>
							<xsd:element name="consumer-configuration" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation><![CDATA[
                                    Declares a kafka topic configuration which drives how and where a topic is sent to broker/s.
                                ]]></xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:choice>
										<xsd:element name="topic" maxOccurs="unbounded">
											<xsd:complexType>
												<xsd:attribute name="id" type="xsd:string" use="required"/>
												<xsd:attribute name="streams" type="xsd:string" use="required"/>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="topic-filter" maxOccurs="1">
											<xsd:complexType>
												<xsd:attribute name="pattern" type="xsd:string" use="required">
													<xsd:annotation>
														<xsd:documentation>
															Regex pattern to match topic
			                                           </xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
												<xsd:attribute name="streams" type="xsd:string" use="required">
													<xsd:annotation>
														<xsd:documentation><![CDATA[
			                                                   Number of streams (threads) to use to consume messages
			                                           ]]></xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
												<xsd:attribute name="exclude" use="optional" default="false">
													<xsd:annotation>
														<xsd:documentation><![CDATA[
			                                                   If exclude is false, it uses whitelist to include topics matching given pattern.
			                                                   If exclude is true, it uses blacklist to exclude topics matching given pattern.
			                                                   Default value is false.
			                                           ]]></xsd:documentation>
													</xsd:annotation>
													<xsd:simpleType>
														<xsd:union memberTypes="xsd:boolean xsd:string"/>
													</xsd:simpleType>
												</xsd:attribute>
											</xsd:complexType>
										</xsd:element>
									</xsd:choice>
									<xsd:attribute name="max-messages" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation><![CDATA[
                                                       Indicates max messages to aggregate in a single call to receive
                                               ]]></xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="group-id" use="required" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation><![CDATA[
                                                   Indicates the Kafka consumer group id
                                           ]]></xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="value-decoder" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Custom implementation of a Kafka Decoder for values.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="kafka.serializer.Decoder"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="key-decoder" use="optional" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													Custom implementation of a Kafka Decoder for keys.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="kafka.serializer.Decoder"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="executor" type="xsd:string">
										<xsd:annotation>
											<xsd:appinfo>
												<xsd:documentation>
													A java.util.concurrent.Executor bean reference.
													Typically
													org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.
													Used to execute iterator task on KafkaStreams.
												</xsd:documentation>
												<tool:annotation kind="ref">
													<tool:expected-type type="java.util.concurrent.Executor"/>
												</tool:annotation>
											</xsd:appinfo>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:choice>
					</xsd:complexType>

				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:string" use="required"/>
			<xsd:attribute name="consumer-timeout" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                           Indicates the Kafka consumer timeout ms
                   ]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="zookeeper-connect" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<xsd:documentation>
							Kafka Server Bean Name
						</xsd:documentation>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.support.ZookeeperConnect"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="consumer-properties" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<xsd:documentation>
							Kafka consumer properties to use for all consumers
						</xsd:documentation>
						<tool:annotation kind="ref">
							<tool:expected-type type="java.util.Properties"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="inbound-channel-adapter">
		<xsd:annotation>
			<xsd:documentation>
				[DEPRECATED]
				The definition for the Spring Integration Kafka
				Inbound Channel Adapter.
				This High Level Consumer Adapter is deprecated in favor of
				message-driven-channel-adapter - based on the Simple Consumer API.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
			<xsd:attribute name="send-timeout" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Maximum amount of time in milliseconds to wait when sending a message to the channel
						if such channel may block. For example, a Queue Channel can block until space is available
						if its maximum capacity has been reached.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="group-id" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
                                       Indicates the Kafka consumer group id
                               ]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="kafka-consumer-context-ref" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<xsd:documentation>
							Kafka consumer context reference.
						</xsd:documentation>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.support.KafkaConsumerContext"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="outbound-channel-adapter">
		<xsd:annotation>
			<xsd:documentation>
				Defines kafka outbound channel adapter that writes the contents of the
				Message to kafka broker.
			</xsd:documentation>
		</xsd:annotation>

		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
			<xsd:attribute name="kafka-producer-context-ref" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<xsd:documentation>
							Kafka producer context reference.
						</xsd:documentation>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.support.KafkaProducerContext"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="topic" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
								Specifies the name of the Kafka topic.
								This attribute is mutually exclusive with 'topic-expression' attribute.
							]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="topic-expression" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
								Specifies the expression to determine the name of the Kafka topic
								against the Message at runtime.
								This attribute is mutually exclusive with 'topic' attribute.
							]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="message-key" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
								Specifies the Key for the Kafka message.
								This attribute is mutually exclusive with 'message-key-expression' attribute.
							]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="message-key-expression" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
								Specifies the expression to determine the Key for Kafka message
								against the Message at runtime.
								This attribute is mutually exclusive with 'message-key' attribute.
							]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="partition-id" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
								Specifies the target partition for the Kafka message.
								This attribute is mutually exclusive with 'partition-id-expression' attribute.
							]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="partition-id-expression" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
								Specifies the expression to determine the partition for Kafka message
								against the Message at runtime.
								This attribute is mutually exclusive with 'partition-id' attribute.
							]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="order">
				<xsd:annotation>
					<xsd:documentation>
						Specifies the order for invocation when this endpoint is connected as a
						subscriber to a SubscribableChannel.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:union memberTypes="xsd:int xsd:string"/>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="message-driven-channel-adapter">
		<xsd:annotation>
			<xsd:documentation>
				The definition for the Spring Integration Kafka
				KafkaMessageDrivenChannelAdapter.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
			<xsd:attribute name="send-timeout" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Maximum amount of time in milliseconds to wait when sending a message to the channel
						if such channel may block. For example, a Queue Channel can block until space is available
						if its maximum capacity has been reached.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="error-channel" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Message Channel to which error Messages should be sent.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="key-decoder" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'kafka.serializer.Decoder' bean reference for decoding the 'key'
						of the received the 'kafka.message.Message'. Defaults to 'kafka.serializer.DefaultDecoder'
						without 'kafka.utils.VerifiableProperties'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="kafka.serializer.Decoder"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="payload-decoder" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'kafka.serializer.Decoder' bean reference for decoding the 'payload'
						of the received the 'kafka.message.Message'. Defaults to 'kafka.serializer.DefaultDecoder'
						without 'kafka.utils.VerifiableProperties'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="kafka.serializer.Decoder"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="listener-container" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'org.springframework.integration.kafka.listener.KafkaMessageListenerContainer' bean reference.
						Mutually exclusive with 'connection-factory', 'topics', 'offset-manager', 'error-handler',
						'task-executor', 'concurrency', 'stop-timeout', 'max-fetch', 'queue-size'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.listener.KafkaMessageListenerContainer"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="connection-factory" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'org.springframework.integration.kafka.core.ConnectionFactory' bean reference.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.core.ConnectionFactory"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="topics" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The comma-separated Kafka topics to listen to.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="offset-manager" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'org.springframework.integration.kafka.listener.OffsetManager' bean reference.
						Defaults to 'org.springframework.integration.kafka.listener.MetadataStoreOffsetManager'.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.listener.OffsetManager"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="error-handler" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'org.springframework.integration.kafka.listener.ErrorHandler' bean reference.
						Used from 'org.springframework.integration.kafka.listener.KafkaMessageListenerContainer'
						to handle errors from 'kafka.message.Message' decoding and when the 'error-channel'
						isn't provided to catch message producing errors.
						Defaults to 'org.springframework.integration.kafka.listener.LoggingErrorHandler.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.kafka.listener.ErrorHandler"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="task-executor" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A 'java.util.concurrent.Executor' bean reference to fetch messages from Kafka.
						Defaults to the 'ThreadPoolExecutor' with the pool based on the number of 'partitionsByBroker'.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="java.util.concurrent.Executor"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="concurrency" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The number of internal concurrent
						'org.springframework.integration.kafka.listener.QueueingMessageListenerInvoker'.
						Defaults to '1'.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="stop-timeout" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The maximum amount of time (in milliseconds) to wait for each 'org.springframework.integration.kafka.listener.QueueingMessageListenerInvoker' to finish before stopping.
						Defaults to '1000'.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="max-fetch" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The maximum amount of data (in bytes) that pollers will fetch in one round.
						Defaults to '300 * 1024'.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="queue-size" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The maximum number of messages that are buffered by each concurrent 'MessageListener' runner.
						Increasing the value may increase throughput, but also increases the memory consumption.
						Defaults to '1024'.
						Mutually exclusive with 'listener-container'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-commit" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						When 'true', the adapter automatically commits the offset. When 'false', the adapter
						inserts a 'kafka_acknowledgment` header allowing the user to manually commit the offset
						using the `Acknowledgment.acknowledge()` method. Default 'true'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="use-context-message-builder" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						When 'true', use the configured message builder from the integration application context
						(bean:"messageBuilderFactory", which defaults to a "DefaultMessageBuilderFactory").
						When 'false', use an internal, optimized, message creation algorithm. Default 'false'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="set-id" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						When 'true', generate a unique ID header for each new message.
						Default 'false'. Set to `true` if messages contain collections and you use a splitter
						later in the flow, or a router where a message is sent to multiple recipients with
						'apply-sequence' set to 'true'. In this cases, the message id is used as the correlation
						id of the resulting messages. If 'use-context-message-builder' is 'true', this
						setting may be ignored by the configured message builder factory (this is the case
						for the 'DefaultMessageBuilderFactory', where an ID is always generated).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="set-timestamp" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						When 'true', generate a TIMESTAMP header for each new message.
						Default 'false' (TIMESTAMP header is set to -1).
						If 'use-context-message-builder' is 'true', this
						setting may be ignored by the configured message builder factory (this is the case
						for the 'DefaultMessageBuilderFactory', where a timestamp header is always generated).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>
